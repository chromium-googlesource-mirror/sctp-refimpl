
All pegs are logged SINCE system start OR since
the last peg clear.

SCTP_PEG_SACKS_SEEN 	"sack_rcv"

Total number of SACK's that have been received by the
system since startup.


SCTP_PEG_SACKS_SENT "sack_snt",

Total number of SACK's the system has sent since system
startup.

SCTP_PEG_TSNS_SENT  "tsns_snt"

Total number of TSN's that have been sent onto the 
wire by this endpoint.

SCTP_PEG_TSNS_RCVD 	"tsns_rcv"

Total number of valid TSN's received by this endpoint. This
does NOT include duplicate TSN's which are counted in a
seperate peg.

SCTP_DATAGRAMS_SENT 	"pkt_sent"


Total number of IP packets placed on the wire by the SCTP
code.

SCTP_DATAGRAMS_RCVD "pkt_rcvd"

Total number of valid SCTP datagrams received. A valid
datagram is one that DOES NOT have a CRC error and  has a valid
port listening for the data.

SCTP_RETRANTSN_SENT "tsns_ret"

Total number of TSN's that were retransmitted by this endpoint.

SCTP_DUPTSN_RECVD   "dup_tsns"

Total number of duplicate TSN's received (not included in the
total number of TSN's received.

SCTP_HB_RECV "hbs__rcv"

Total number of Heartbeats received

SCTP_HB_ACK_RECV "hbackrcv"

Total number of Heartbeat-ack's received

SCTP_HB_SENT "htb__snt"

Total number of Heartbeats enqueued to the control output queue.

SCTP_WINDOW_PROBES "win_prbe"

Total number of TSN's sent has window probes (this includes
duplicate retransmissions while awaiting the rwnd to raise).

SCTP_DATA_DG_RECV  "pktswdat"

Total number of datagrams received that carried DATA chunks.

SCTP_TMIT_TIMER  "t3-timeo"

Total number of T3 re-transmit timers that have gone off.

SCTP_RECV_TIMER    dsack-to"

Total number of Delayed SACK timers that have gone off.

SCTP_HB_TIMER      "hb_timer"

Total number of times a HB timer has expired.

SCTP_FAST_RETRAN   "fst_rxts"

Total number of packets sent that the retransmission was caused
by one or more TSN's being fast retransmitted.

SCTP_TIMERS_EXP    "timerexp"

Total number of times the timer expiration code has been activated.

SCTP_FR_INAWINDOW "fr_inwin"

Total number of times we did more than one fast retransmission in
a single RTT window (thus we did not do a second cwnd reduction).

SCTP_RWND_BLOCKED  "blk_rwnd"

Total number of times that we would have sent more data but
we were blocked by the peers RWND.

SCTP_CWND_BLOCKED "blk_cwnd"

Total number of times that we would have sent more data but
we were blocked by the destinatioin CWND.

SCTP_RWND_DROPS   "rwnd_drp"

Total number of times that we dropped inbound data due to
the peer exceeding our advertised rwnd (the peer over-ran
our rwnd).

SCTP_BAD_STRMNO "bad_strm"

Total number of times a peer sent us data in a stream
that did not exist.

SCTP_BAD_SSN_WRAP  "bad_ssnw"

Total number of times a peer sent us a new TSN that had
a stream sequence number less than or equal to the
one we last delivered.

SCTP_DROP_NOMEMORY  "drpnomem"

Total number of times we had to drop incoming data due to
a shortage of memory (either chunk space or mbuf space).

SCTP_DROP_FRAG     25	"drpfragm"

Total number of times we were dealing with reassembled data
and the peer sent something out of bounds, i.e. the consistency
checks for the reassembled data failed. An example of this
would be where we get a TSN marked as un-fragmented but its
TSN belongs in the middle of a reassembly.

SCTP_BAD_VTAGS     "badvtags"

Total number of packets received where the VTAG was invalid.

SCTP_BAD_CSUM  "badcsumv"

Total number of input packets that had bad checksums and were
dropped.

SCTP_INPKTS "packetin"

Total number of packets received, including ones dropped for
checksum or other errors.

SCTP_IN_MCAST    "mcastrcv"

Total number of multicast packets received and dropped.

SCTP_HDR_DROPS 	"hdrdrops"

Total number of header errors, this can be an in-consistent
mbuf size, packets sent to port 0, or failure of the mbuf
system to be able to do a pullup to cover the IP and SCTP header.

SCTP_NOPORTS "no_portn"

Number of ootb packets recieved destined for ports that had
no listeners and no association.

SCTP_CWND_NOFILL "cwnd_nf "

Number of times a destination address was skipped in the
transfer of stream data into queue to it due to the fact that the
flightsize of the destination was already at or above the cwnd.

SCTP_CALLS_TO_CO   "co_snds "

Total number of calls made to the sctp_chunk_output routine. This
is the basic call that most all local output is scheduled through.

SCTP_CO_NODATASNT  "co_nodat"

Number of times sctp_chunk_output was called and no data was sent.

SCTP_CWND_NOUSE_SS "cw_nu_ss"

Number of times a destination's cwnd could have been raised
except that the full cwnd was not being used.

SCTP_MAX_BURST_APL "max_brst"

Number of times the max_burst parameter stopped output.

SCTP_EXPRESS_ROUTE "expr_del"

The total number of times that express delivery was used. Express
delivery means that the inbound TSN was a total user message, nothing
else was waiting to be delivered, no fragmented delivery (pd-api) was
in progress, the message was either un-ordered OR the next stream
sequence ready to be delivered in its stream, and there was
room to put it into the socket buffer. When all of the above our
true, we deliver right away and thus save a huge amount of overhead
allocating and tracking the chunk and finally delivering it after
any re-ordering is sorted out.

SCTP_NO_COPY_IN "no_cp_in"

Number of times the last data chunk in the packet was able to
be used without a mcopy_m() call, i.e. we stole the mbuf to
hold the data without doing a copy.

SCTP_CACHED_SRC "cach_src"

Number of times we were able to use the m_copypacket() function to
optimize copying of the data packet to be sent upon the wire.

SCTP_CWND_NOCUM	  "cw_nocum"

Number of times that we had acknowledged data that did not
move forward the CWND due to the fact that the cumulative
ack point did NOT move forward.

SCTP_CWND_SS "cw_incss"

Number of times we increased the CWND in slow start.

SCTP_CWND_CA "cw_incca"

Number of times we increased the CWND in congestion avoidance.

SCTP_CWND_SKIP "cw_skip "

Number of times loss recover had us skip a CWND update.

SCTP_CWND_NOUSE_CA "cw_nu_ca"

Number of times we were not fully using the CWND and we
were in congestion avoidance so we did NOT grow the cwnd.

SCTP_MAX_CWND "cw_maxcw"

Maximum valud we have ever grown cwnd for any destination to.

SCTP_CWND_DIFF_CA  "diff_ss "

The largest amount of room in the cwnd window ever seen
when the cwnd was NOT grown in congestion avoidance.

SCTP_CWND_DIFF_SA  "diff_ca "

The largest amount of room in the cwnd window ever seen
when the cwnd was NOT grown in slow start.

SCTP_OQS_AT_SS 	"tqs @ ss"
The total output queue size when the recorded 
SCTP_CWND_DIFF_SA event was found.

SCTP_SQQ_AT_SS 	"sqs @ ss"
The total number number of chunks on the sent queue when
the recorded SCTP_CWND_DIFF_SA event was found.

SCTP_OQS_AT_CA "tqs @ ca"
The total output queue size when the recorded 
SCTP_CWND_DIFF_CA event was found.

#define SCTP_SQQ_AT_CA "sqq @ ca"
The total number number of chunks on the sent queue when
the recorded SCTP_CWND_DIFF_CA event was found.

SCTP_MOVED_MTU  "lmtu_mov"

In attempting to fill up the send queue, what is the
largest mtu ever requested to the fill routine.

SCTP_MOVED_QMAX "lcnt_mov"

In attempting to fill up the send queue, the largest
number of chunks ever moved at one call.

SCTP_SQC_AT_SS  "sndqctss"
The total number of chunks on the send queue when
the recorded SCTP_CWND_DIFF_SA event was found.

#define SCTP_SQC_AT_CA 	"sndqctca"

The total number of chunks on the send queue when
the recorded SCTP_CWND_DIFF_CA event was found.

#define SCTP_MOVED_MAX     56
	"movemax ", /* 56 */
#define SCTP_MOVED_NLEF    57
	"move_equ", /* 57 */
#define SCTP_NAGLE_NOQ     58
	"nagle_qo", /* 58 */
#define SCTP_NAGLE_OFF     59
	"nagle_of", /* 59 */
#define SCTP_OUTPUT_FRM_SND 60
	"out_fr_s", /* 60 */
#define SCTP_SOS_NOSNT     61   /* some on stream queues when none sent */
	"sostrnos", /* 61 */
#define SCTP_NOS_NOSNT     62   /* none on stream queues when none sent */
	"nostrnos", /* 62 */
#define SCTP_SOSE_NOSNT    63   /* some on send queue when none sent */
	"sosnqnos", /* 63 */
#define SCTP_NOSE_NOSNT    64   /* none on send queue when none sent */
	"nosnqnos", /* 64 */
#define SCTP_DATA_OUT_ERR  65
	"intoperr", /* 65 */
#define SCTP_DUP_SSN_RCVD  66
	"dupssnrc", /* 66 */
#define SCTP_DUP_FR        67
	"multi-fr", /* 67 */
#define SCTP_VTAG_EXPR     68
	"vtag-exp", /* 68 */
#define SCTP_VTAG_BOGUS    69
	"vtag-bog", /* 69 */
#define SCTP_T3_SAFEGRD    70
	"t3-safeg", /* 70 */
#define SCTP_PDRP_FMBOX    71
	"pd--mbox", /* 71 */
#define SCTP_PDRP_FEHOS    72
	"pd-ehost", /* 72 */
#define SCTP_PDRP_MB_DA	   73
        "pdmb_wda"  /* 73 */
#define SCTP_PDRP_MB_CT	   74
	"pdmb_ctl", /* 74 */
#define SCTP_PDRP_BWRPT	   75
	"pdmb_bwr", /* 75 */
#define SCTP_PDRP_CRUPT	   76
	"pd_corup", /* 76 */
#define SCTP_PDRP_NEDAT    77
	"pd_nedat", /* 77 */
#define SCTP_PDRP_PDBRK    78
	"pd_errpd", /* 78 */
#define SCTP_PREPENDS_FAST 79
	"fst_prep", /* 79 */
#define SCTP_PDRP_DNFND    80
	"pd_daNFo", /* 80 */
#define SCTP_PDRP_DIWNP    81
	"pd_dIWin", /* 81 */
#define SCTP_PDRP_DIZRW    82
	"pd_dIZrw", /* 82 */
#define SCTP_PDRP_BADD     83
	"pd_BadDa", /* 83 */
#define SCTP_PDRP_MARK     84
	"pd_dMark", /* 84 */
#define SCTP_ECNE_RCVD     85
	"ecne_rcv", /* 85 */
#define SCTP_CWR_PERFO     86
	"cwr_perf", /* 86 */
#define SCTP_ECNE_SENT     87
	"ecne_snt", /* 87 */
#define SCTP_MSGC_DROP     88 "chun_drp",
Total number of chunks on queue that were dropped
without processing due to the peer hitting the
total chunk limit.
